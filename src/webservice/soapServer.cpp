/* soapServer.cpp
   Generated by gSOAP 2.8.18 from ./webservice.h

Copyright(C) 2000-2014, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under one of the following licenses:
GPL or Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#if defined(__BORLANDC__)
#pragma option push -w-8060
#pragma option push -w-8004
#endif
#include "soapH.h"

SOAP_SOURCE_STAMP("@(#) soapServer.cpp ver 2.8.18 2015-03-02 07:44:15 GMT")


extern "C" SOAP_FMAC5 int SOAP_FMAC6 soap_serve(struct soap *soap)
{
#ifndef WITH_FASTCGI
	unsigned int k = soap->max_keep_alive;
#endif
	do
	{
#ifndef WITH_FASTCGI
		if (soap->max_keep_alive > 0 && !--k)
			soap->keep_alive = 0;
#endif
		if (soap_begin_serve(soap))
		{	if (soap->error >= SOAP_STOP)
				continue;
			return soap->error;
		}
		if (soap_serve_request(soap) || (soap->fserveloop && soap->fserveloop(soap)))
		{
#ifdef WITH_FASTCGI
			soap_send_fault(soap);
#else
			return soap_send_fault(soap);
#endif
		}

#ifdef WITH_FASTCGI
		soap_destroy(soap);
		soap_end(soap);
	} while (1);
#else
	} while (soap->keep_alive);
#endif
	return SOAP_OK;
}

#ifndef WITH_NOSERVEREQUEST
extern "C" SOAP_FMAC5 int SOAP_FMAC6 soap_serve_request(struct soap *soap)
{
	soap_peek_element(soap);
	if (!soap_match_tag(soap, soap->tag, "mons:GetMontorState"))
		return soap_serve_mons__GetMontorState(soap);
	if (!soap_match_tag(soap, soap->tag, "mons:GetTMSState"))
		return soap_serve_mons__GetTMSState(soap);
	if (!soap_match_tag(soap, soap->tag, "mons:GetSMSState"))
		return soap_serve_mons__GetSMSState(soap);
	if (!soap_match_tag(soap, soap->tag, "mons:GetRaidtate"))
		return soap_serve_mons__GetRaidtate(soap);
	if (!soap_match_tag(soap, soap->tag, "mons:GetEthState"))
		return soap_serve_mons__GetEthState(soap);
	if (!soap_match_tag(soap, soap->tag, "mons:GetSwitchState"))
		return soap_serve_mons__GetSwitchState(soap);
	if (!soap_match_tag(soap, soap->tag, "mons:GetIngestSpeedLimit"))
		return soap_serve_mons__GetIngestSpeedLimit(soap);
	if (!soap_match_tag(soap, soap->tag, "mons:GetWorkState_CS"))
		return soap_serve_mons__GetWorkState_USCORECS(soap);
	if (!soap_match_tag(soap, soap->tag, "mons:ExeSwitchTMSToOther"))
		return soap_serve_mons__ExeSwitchTMSToOther(soap);
	if (!soap_match_tag(soap, soap->tag, "mons:ExeSwitchSMSToOther"))
		return soap_serve_mons__ExeSwitchSMSToOther(soap);
	if (!soap_match_tag(soap, soap->tag, "mons:ExeSwitchSMSToOtherDelay"))
		return soap_serve_mons__ExeSwitchSMSToOtherDelay(soap);
	if (!soap_match_tag(soap, soap->tag, "mons:ExeCloseSMS"))
		return soap_serve_mons__ExeCloseSMS(soap);
	if (!soap_match_tag(soap, soap->tag, "mons:ExeStartSMS"))
		return soap_serve_mons__ExeStartSMS(soap);
	if (!soap_match_tag(soap, soap->tag, "mons:ExeDcpHashCheck"))
		return soap_serve_mons__ExeDcpHashCheck(soap);
	if (!soap_match_tag(soap, soap->tag, "mons:ExeGetHashCheckPercent"))
		return soap_serve_mons__ExeGetHashCheckPercent(soap);
	return soap->error = SOAP_NO_METHOD;
}
#endif

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_mons__GetMontorState(struct soap *soap)
{	struct mons__GetMontorState soap_tmp_mons__GetMontorState;
	struct mons__MontorStateRes ret;
	soap_default_mons__MontorStateRes(soap, &ret);
	soap_default_mons__GetMontorState(soap, &soap_tmp_mons__GetMontorState);
	if (!soap_get_mons__GetMontorState(soap, &soap_tmp_mons__GetMontorState, "mons:GetMontorState", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = mons__GetMontorState(soap, ret);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize_mons__MontorStateRes(soap, &ret);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_mons__MontorStateRes(soap, &ret, "mons:MontorStateRes", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_mons__MontorStateRes(soap, &ret, "mons:MontorStateRes", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_mons__GetTMSState(struct soap *soap)
{	struct mons__GetTMSState soap_tmp_mons__GetTMSState;
	struct mons__TmsStateRes ret;
	soap_default_mons__TmsStateRes(soap, &ret);
	soap_default_mons__GetTMSState(soap, &soap_tmp_mons__GetTMSState);
	if (!soap_get_mons__GetTMSState(soap, &soap_tmp_mons__GetTMSState, "mons:GetTMSState", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = mons__GetTMSState(soap, ret);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize_mons__TmsStateRes(soap, &ret);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_mons__TmsStateRes(soap, &ret, "mons:TmsStateRes", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_mons__TmsStateRes(soap, &ret, "mons:TmsStateRes", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_mons__GetSMSState(struct soap *soap)
{	struct mons__GetSMSState soap_tmp_mons__GetSMSState;
	struct mons__GetSMSStateResponse soap_tmp_mons__GetSMSStateResponse;
	soap_default_mons__GetSMSStateResponse(soap, &soap_tmp_mons__GetSMSStateResponse);
	soap_default_mons__GetSMSState(soap, &soap_tmp_mons__GetSMSState);
	if (!soap_get_mons__GetSMSState(soap, &soap_tmp_mons__GetSMSState, "mons:GetSMSState", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = mons__GetSMSState(soap, soap_tmp_mons__GetSMSStateResponse.vecret);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize_mons__GetSMSStateResponse(soap, &soap_tmp_mons__GetSMSStateResponse);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_mons__GetSMSStateResponse(soap, &soap_tmp_mons__GetSMSStateResponse, "mons:GetSMSStateResponse", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_mons__GetSMSStateResponse(soap, &soap_tmp_mons__GetSMSStateResponse, "mons:GetSMSStateResponse", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_mons__GetRaidtate(struct soap *soap)
{	struct mons__GetRaidtate soap_tmp_mons__GetRaidtate;
	struct mons__RaidStateRes ret;
	soap_default_mons__RaidStateRes(soap, &ret);
	soap_default_mons__GetRaidtate(soap, &soap_tmp_mons__GetRaidtate);
	if (!soap_get_mons__GetRaidtate(soap, &soap_tmp_mons__GetRaidtate, "mons:GetRaidtate", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = mons__GetRaidtate(soap, ret);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize_mons__RaidStateRes(soap, &ret);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_mons__RaidStateRes(soap, &ret, "mons:RaidStateRes", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_mons__RaidStateRes(soap, &ret, "mons:RaidStateRes", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_mons__GetEthState(struct soap *soap)
{	struct mons__GetEthState soap_tmp_mons__GetEthState;
	struct mons__GetEthStateResponse soap_tmp_mons__GetEthStateResponse;
	soap_default_mons__GetEthStateResponse(soap, &soap_tmp_mons__GetEthStateResponse);
	soap_default_mons__GetEthState(soap, &soap_tmp_mons__GetEthState);
	if (!soap_get_mons__GetEthState(soap, &soap_tmp_mons__GetEthState, "mons:GetEthState", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = mons__GetEthState(soap, soap_tmp_mons__GetEthStateResponse.vecret);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize_mons__GetEthStateResponse(soap, &soap_tmp_mons__GetEthStateResponse);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_mons__GetEthStateResponse(soap, &soap_tmp_mons__GetEthStateResponse, "mons:GetEthStateResponse", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_mons__GetEthStateResponse(soap, &soap_tmp_mons__GetEthStateResponse, "mons:GetEthStateResponse", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_mons__GetSwitchState(struct soap *soap)
{	struct mons__GetSwitchState soap_tmp_mons__GetSwitchState;
	struct mons__SwitchStateRes ret;
	soap_default_mons__SwitchStateRes(soap, &ret);
	soap_default_mons__GetSwitchState(soap, &soap_tmp_mons__GetSwitchState);
	if (!soap_get_mons__GetSwitchState(soap, &soap_tmp_mons__GetSwitchState, "mons:GetSwitchState", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = mons__GetSwitchState(soap, ret);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize_mons__SwitchStateRes(soap, &ret);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_mons__SwitchStateRes(soap, &ret, "mons:SwitchStateRes", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_mons__SwitchStateRes(soap, &ret, "mons:SwitchStateRes", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_mons__GetIngestSpeedLimit(struct soap *soap)
{	struct mons__GetIngestSpeedLimit soap_tmp_mons__GetIngestSpeedLimit;
	struct mons__IngestSpeedLimitRes ret;
	soap_default_mons__IngestSpeedLimitRes(soap, &ret);
	soap_default_mons__GetIngestSpeedLimit(soap, &soap_tmp_mons__GetIngestSpeedLimit);
	if (!soap_get_mons__GetIngestSpeedLimit(soap, &soap_tmp_mons__GetIngestSpeedLimit, "mons:GetIngestSpeedLimit", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = mons__GetIngestSpeedLimit(soap, ret);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize_mons__IngestSpeedLimitRes(soap, &ret);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_mons__IngestSpeedLimitRes(soap, &ret, "mons:IngestSpeedLimitRes", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_mons__IngestSpeedLimitRes(soap, &ret, "mons:IngestSpeedLimitRes", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_mons__GetWorkState_USCORECS(struct soap *soap)
{	struct mons__GetWorkState_USCORECS soap_tmp_mons__GetWorkState_USCORECS;
	struct mons__WorkStateRes ret;
	soap_default_mons__WorkStateRes(soap, &ret);
	soap_default_mons__GetWorkState_USCORECS(soap, &soap_tmp_mons__GetWorkState_USCORECS);
	if (!soap_get_mons__GetWorkState_USCORECS(soap, &soap_tmp_mons__GetWorkState_USCORECS, "mons:GetWorkState_CS", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = mons__GetWorkState_USCORECS(soap, ret);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize_mons__WorkStateRes(soap, &ret);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_mons__WorkStateRes(soap, &ret, "mons:WorkStateRes", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_mons__WorkStateRes(soap, &ret, "mons:WorkStateRes", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_mons__ExeSwitchTMSToOther(struct soap *soap)
{	struct mons__ExeSwitchTMSToOther soap_tmp_mons__ExeSwitchTMSToOther;
	struct mons__ExeSwitchTMSToOtherResponse soap_tmp_mons__ExeSwitchTMSToOtherResponse;
	soap_default_mons__ExeSwitchTMSToOtherResponse(soap, &soap_tmp_mons__ExeSwitchTMSToOtherResponse);
	soap_default_mons__ExeSwitchTMSToOther(soap, &soap_tmp_mons__ExeSwitchTMSToOther);
	if (!soap_get_mons__ExeSwitchTMSToOther(soap, &soap_tmp_mons__ExeSwitchTMSToOther, "mons:ExeSwitchTMSToOther", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = mons__ExeSwitchTMSToOther(soap, soap_tmp_mons__ExeSwitchTMSToOtherResponse.ret);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize_mons__ExeSwitchTMSToOtherResponse(soap, &soap_tmp_mons__ExeSwitchTMSToOtherResponse);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_mons__ExeSwitchTMSToOtherResponse(soap, &soap_tmp_mons__ExeSwitchTMSToOtherResponse, "mons:ExeSwitchTMSToOtherResponse", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_mons__ExeSwitchTMSToOtherResponse(soap, &soap_tmp_mons__ExeSwitchTMSToOtherResponse, "mons:ExeSwitchTMSToOtherResponse", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_mons__ExeSwitchSMSToOther(struct soap *soap)
{	struct mons__ExeSwitchSMSToOther soap_tmp_mons__ExeSwitchSMSToOther;
	struct mons__ExeSwitchSMSToOtherResponse soap_tmp_mons__ExeSwitchSMSToOtherResponse;
	soap_default_mons__ExeSwitchSMSToOtherResponse(soap, &soap_tmp_mons__ExeSwitchSMSToOtherResponse);
	soap_default_mons__ExeSwitchSMSToOther(soap, &soap_tmp_mons__ExeSwitchSMSToOther);
	if (!soap_get_mons__ExeSwitchSMSToOther(soap, &soap_tmp_mons__ExeSwitchSMSToOther, "mons:ExeSwitchSMSToOther", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = mons__ExeSwitchSMSToOther(soap, soap_tmp_mons__ExeSwitchSMSToOther.strHallID, soap_tmp_mons__ExeSwitchSMSToOtherResponse.ret);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize_mons__ExeSwitchSMSToOtherResponse(soap, &soap_tmp_mons__ExeSwitchSMSToOtherResponse);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_mons__ExeSwitchSMSToOtherResponse(soap, &soap_tmp_mons__ExeSwitchSMSToOtherResponse, "mons:ExeSwitchSMSToOtherResponse", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_mons__ExeSwitchSMSToOtherResponse(soap, &soap_tmp_mons__ExeSwitchSMSToOtherResponse, "mons:ExeSwitchSMSToOtherResponse", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_mons__ExeSwitchSMSToOtherDelay(struct soap *soap)
{	struct mons__ExeSwitchSMSToOtherDelay soap_tmp_mons__ExeSwitchSMSToOtherDelay;
	struct mons__ExeSwitchSMSToOtherDelayResponse soap_tmp_mons__ExeSwitchSMSToOtherDelayResponse;
	soap_default_mons__ExeSwitchSMSToOtherDelayResponse(soap, &soap_tmp_mons__ExeSwitchSMSToOtherDelayResponse);
	soap_default_mons__ExeSwitchSMSToOtherDelay(soap, &soap_tmp_mons__ExeSwitchSMSToOtherDelay);
	if (!soap_get_mons__ExeSwitchSMSToOtherDelay(soap, &soap_tmp_mons__ExeSwitchSMSToOtherDelay, "mons:ExeSwitchSMSToOtherDelay", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = mons__ExeSwitchSMSToOtherDelay(soap, soap_tmp_mons__ExeSwitchSMSToOtherDelay.strHallID, soap_tmp_mons__ExeSwitchSMSToOtherDelayResponse.ret);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize_mons__ExeSwitchSMSToOtherDelayResponse(soap, &soap_tmp_mons__ExeSwitchSMSToOtherDelayResponse);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_mons__ExeSwitchSMSToOtherDelayResponse(soap, &soap_tmp_mons__ExeSwitchSMSToOtherDelayResponse, "mons:ExeSwitchSMSToOtherDelayResponse", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_mons__ExeSwitchSMSToOtherDelayResponse(soap, &soap_tmp_mons__ExeSwitchSMSToOtherDelayResponse, "mons:ExeSwitchSMSToOtherDelayResponse", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_mons__ExeCloseSMS(struct soap *soap)
{	struct mons__ExeCloseSMS soap_tmp_mons__ExeCloseSMS;
	struct mons__ExeCloseSMSResponse soap_tmp_mons__ExeCloseSMSResponse;
	soap_default_mons__ExeCloseSMSResponse(soap, &soap_tmp_mons__ExeCloseSMSResponse);
	soap_default_mons__ExeCloseSMS(soap, &soap_tmp_mons__ExeCloseSMS);
	if (!soap_get_mons__ExeCloseSMS(soap, &soap_tmp_mons__ExeCloseSMS, "mons:ExeCloseSMS", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = mons__ExeCloseSMS(soap, soap_tmp_mons__ExeCloseSMS.strHallID, soap_tmp_mons__ExeCloseSMSResponse.ret);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize_mons__ExeCloseSMSResponse(soap, &soap_tmp_mons__ExeCloseSMSResponse);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_mons__ExeCloseSMSResponse(soap, &soap_tmp_mons__ExeCloseSMSResponse, "mons:ExeCloseSMSResponse", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_mons__ExeCloseSMSResponse(soap, &soap_tmp_mons__ExeCloseSMSResponse, "mons:ExeCloseSMSResponse", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_mons__ExeStartSMS(struct soap *soap)
{	struct mons__ExeStartSMS soap_tmp_mons__ExeStartSMS;
	struct mons__ExeStartSMSResponse soap_tmp_mons__ExeStartSMSResponse;
	soap_default_mons__ExeStartSMSResponse(soap, &soap_tmp_mons__ExeStartSMSResponse);
	soap_default_mons__ExeStartSMS(soap, &soap_tmp_mons__ExeStartSMS);
	if (!soap_get_mons__ExeStartSMS(soap, &soap_tmp_mons__ExeStartSMS, "mons:ExeStartSMS", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = mons__ExeStartSMS(soap, soap_tmp_mons__ExeStartSMS.strHallID, soap_tmp_mons__ExeStartSMSResponse.ret);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize_mons__ExeStartSMSResponse(soap, &soap_tmp_mons__ExeStartSMSResponse);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_mons__ExeStartSMSResponse(soap, &soap_tmp_mons__ExeStartSMSResponse, "mons:ExeStartSMSResponse", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_mons__ExeStartSMSResponse(soap, &soap_tmp_mons__ExeStartSMSResponse, "mons:ExeStartSMSResponse", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_mons__ExeDcpHashCheck(struct soap *soap)
{	struct mons__ExeDcpHashCheck soap_tmp_mons__ExeDcpHashCheck;
	struct mons__ExeDcpHashCheckResponse soap_tmp_mons__ExeDcpHashCheckResponse;
	soap_default_mons__ExeDcpHashCheckResponse(soap, &soap_tmp_mons__ExeDcpHashCheckResponse);
	soap_default_mons__ExeDcpHashCheck(soap, &soap_tmp_mons__ExeDcpHashCheck);
	if (!soap_get_mons__ExeDcpHashCheck(soap, &soap_tmp_mons__ExeDcpHashCheck, "mons:ExeDcpHashCheck", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = mons__ExeDcpHashCheck(soap, soap_tmp_mons__ExeDcpHashCheck.path, soap_tmp_mons__ExeDcpHashCheck.PklUuid, soap_tmp_mons__ExeDcpHashCheckResponse.errorInfo);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize_mons__ExeDcpHashCheckResponse(soap, &soap_tmp_mons__ExeDcpHashCheckResponse);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_mons__ExeDcpHashCheckResponse(soap, &soap_tmp_mons__ExeDcpHashCheckResponse, "mons:ExeDcpHashCheckResponse", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_mons__ExeDcpHashCheckResponse(soap, &soap_tmp_mons__ExeDcpHashCheckResponse, "mons:ExeDcpHashCheckResponse", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_mons__ExeGetHashCheckPercent(struct soap *soap)
{	struct mons__ExeGetHashCheckPercent soap_tmp_mons__ExeGetHashCheckPercent;
	struct mons__HashCheckPercent stResult;
	soap_default_mons__HashCheckPercent(soap, &stResult);
	soap_default_mons__ExeGetHashCheckPercent(soap, &soap_tmp_mons__ExeGetHashCheckPercent);
	if (!soap_get_mons__ExeGetHashCheckPercent(soap, &soap_tmp_mons__ExeGetHashCheckPercent, "mons:ExeGetHashCheckPercent", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = mons__ExeGetHashCheckPercent(soap, soap_tmp_mons__ExeGetHashCheckPercent.PklUuid, stResult);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize_mons__HashCheckPercent(soap, &stResult);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_mons__HashCheckPercent(soap, &stResult, "mons:HashCheckPercent", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_mons__HashCheckPercent(soap, &stResult, "mons:HashCheckPercent", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

#if defined(__BORLANDC__)
#pragma option pop
#pragma option pop
#endif

/* End of soapServer.cpp */
