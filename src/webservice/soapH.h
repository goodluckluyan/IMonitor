/* soapH.h
   Generated by gSOAP 2.7.15 from webservice.h
   Copyright(C) 2000-2009, Robert van Engelen, Genivia Inc. All Rights Reserved.
   This part of the software is released under one of the following licenses:
   GPL, the gSOAP public license, or Genivia's license for commercial use.
*/

#ifndef soapH_H
#define soapH_H
#include "soapStub.h"
#ifndef WITH_NOIDREF

#ifdef __cplusplus
extern "C" {
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_markelement(struct soap*, const void*, int);
SOAP_FMAC3 int SOAP_FMAC4 soap_putelement(struct soap*, const void*, const char*, int, int);
SOAP_FMAC3 void *SOAP_FMAC4 soap_getelement(struct soap*, int*);

#ifdef __cplusplus
}
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_putindependent(struct soap*);
SOAP_FMAC3 int SOAP_FMAC4 soap_getindependent(struct soap*);
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_ignore_element(struct soap*);

SOAP_FMAC3 void * SOAP_FMAC4 soap_instantiate(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 int SOAP_FMAC4 soap_fdelete(struct soap_clist*);
SOAP_FMAC3 void* SOAP_FMAC4 soap_class_id_enter(struct soap*, const char*, void*, int, size_t, const char*, const char*);

SOAP_FMAC3 void* SOAP_FMAC4 soap_container_id_forward(struct soap*, const char*, void*, size_t, int, int, size_t, unsigned int);

SOAP_FMAC3 void SOAP_FMAC4 soap_container_insert(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_byte
#define SOAP_TYPE_byte (3)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_byte(struct soap*, char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_byte(struct soap*, const char*, int, const char *, const char*);
SOAP_FMAC3 char * SOAP_FMAC4 soap_in_byte(struct soap*, const char*, char *, const char*);

#define soap_write_byte(soap, data) ( soap_begin_send(soap) || (soap_serialize_byte(soap, data), 0) || soap_put_byte(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_byte(struct soap*, const char *, const char*, const char*);

#define soap_read_byte(soap, data) ( soap_begin_recv(soap) || !soap_get_byte(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 char * SOAP_FMAC4 soap_get_byte(struct soap*, char *, const char*, const char*);

#ifndef SOAP_TYPE_int
#define SOAP_TYPE_int (1)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_int(struct soap*, int *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_int(struct soap*, const char*, int, const int *, const char*);
SOAP_FMAC3 int * SOAP_FMAC4 soap_in_int(struct soap*, const char*, int *, const char*);

#define soap_write_int(soap, data) ( soap_begin_send(soap) || (soap_serialize_int(soap, data), 0) || soap_put_int(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_int(struct soap*, const int *, const char*, const char*);

#define soap_read_int(soap, data) ( soap_begin_recv(soap) || !soap_get_int(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 int * SOAP_FMAC4 soap_get_int(struct soap*, int *, const char*, const char*);

#ifndef SOAP_TYPE_std__string
#define SOAP_TYPE_std__string (17)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__string(struct soap*, std::string *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__string(struct soap*, const std::string *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__string(struct soap*, const char*, int, const std::string*, const char*);
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_std__string(struct soap*, const char*, std::string*, const char*);

#define soap_write_std__string(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_std__string(struct soap*, const std::string *, const char*, const char*);

#define soap_read_std__string(soap, data) ( soap_begin_recv(soap) || !soap_get_std__string(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_std__string(struct soap*, std::string *, const char*, const char*);

#define soap_new_std__string(soap, n) ::soap_instantiate_std__string(soap, n, NULL, NULL, NULL)


#define soap_delete_std__string(soap, p) soap_delete(soap, p)

SOAP_FMAC1 std::string * SOAP_FMAC2 soap_instantiate_std__string(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__string(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (51)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Fault(struct soap*, const char*, int, const struct SOAP_ENV__Fault *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_in_SOAP_ENV__Fault(struct soap*, const char*, struct SOAP_ENV__Fault *, const char*);

#define soap_write_SOAP_ENV__Fault(soap, data) ( soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Fault(soap, data), 0) || soap_put_SOAP_ENV__Fault(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *, const char*, const char*);

#define soap_read_SOAP_ENV__Fault(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Fault(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_get_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *, const char*, const char*);

#define soap_new_SOAP_ENV__Fault(soap, n) ::soap_instantiate_SOAP_ENV__Fault(soap, n, NULL, NULL, NULL)


#define soap_delete_SOAP_ENV__Fault(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct SOAP_ENV__Fault * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Fault(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Fault(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (50)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Reason(struct soap*, const char*, int, const struct SOAP_ENV__Reason *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_in_SOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason *, const char*);

#define soap_write_SOAP_ENV__Reason(soap, data) ( soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Reason(soap, data), 0) || soap_put_SOAP_ENV__Reason(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *, const char*, const char*);

#define soap_read_SOAP_ENV__Reason(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Reason(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_get_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *, const char*, const char*);

#define soap_new_SOAP_ENV__Reason(soap, n) ::soap_instantiate_SOAP_ENV__Reason(soap, n, NULL, NULL, NULL)


#define soap_delete_SOAP_ENV__Reason(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct SOAP_ENV__Reason * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Reason(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Reason(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (47)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Detail(struct soap*, const char*, int, const struct SOAP_ENV__Detail *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_in_SOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail *, const char*);

#define soap_write_SOAP_ENV__Detail(soap, data) ( soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Detail(soap, data), 0) || soap_put_SOAP_ENV__Detail(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *, const char*, const char*);

#define soap_read_SOAP_ENV__Detail(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Detail(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_get_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *, const char*, const char*);

#define soap_new_SOAP_ENV__Detail(soap, n) ::soap_instantiate_SOAP_ENV__Detail(soap, n, NULL, NULL, NULL)


#define soap_delete_SOAP_ENV__Detail(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct SOAP_ENV__Detail * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Detail(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Detail(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (45)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Code(struct soap*, const char*, int, const struct SOAP_ENV__Code *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_in_SOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code *, const char*);

#define soap_write_SOAP_ENV__Code(soap, data) ( soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Code(soap, data), 0) || soap_put_SOAP_ENV__Code(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *, const char*, const char*);

#define soap_read_SOAP_ENV__Code(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Code(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_get_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *, const char*, const char*);

#define soap_new_SOAP_ENV__Code(soap, n) ::soap_instantiate_SOAP_ENV__Code(soap, n, NULL, NULL, NULL)


#define soap_delete_SOAP_ENV__Code(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct SOAP_ENV__Code * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Code(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Code(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (44)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Header(struct soap*, const char*, int, const struct SOAP_ENV__Header *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_in_SOAP_ENV__Header(struct soap*, const char*, struct SOAP_ENV__Header *, const char*);

#define soap_write_SOAP_ENV__Header(soap, data) ( soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Header(soap, data), 0) || soap_put_SOAP_ENV__Header(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *, const char*, const char*);

#define soap_read_SOAP_ENV__Header(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Header(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_get_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *, const char*, const char*);

#define soap_new_SOAP_ENV__Header(soap, n) ::soap_instantiate_SOAP_ENV__Header(soap, n, NULL, NULL, NULL)


#define soap_delete_SOAP_ENV__Header(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct SOAP_ENV__Header * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Header(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Header(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef SOAP_TYPE_mons__GetWorkState_USCORECS
#define SOAP_TYPE_mons__GetWorkState_USCORECS (43)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_mons__GetWorkState_USCORECS(struct soap*, struct mons__GetWorkState_USCORECS *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_mons__GetWorkState_USCORECS(struct soap*, const struct mons__GetWorkState_USCORECS *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_mons__GetWorkState_USCORECS(struct soap*, const char*, int, const struct mons__GetWorkState_USCORECS *, const char*);
SOAP_FMAC3 struct mons__GetWorkState_USCORECS * SOAP_FMAC4 soap_in_mons__GetWorkState_USCORECS(struct soap*, const char*, struct mons__GetWorkState_USCORECS *, const char*);

#define soap_write_mons__GetWorkState_USCORECS(soap, data) ( soap_begin_send(soap) || (soap_serialize_mons__GetWorkState_USCORECS(soap, data), 0) || soap_put_mons__GetWorkState_USCORECS(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_mons__GetWorkState_USCORECS(struct soap*, const struct mons__GetWorkState_USCORECS *, const char*, const char*);

#define soap_read_mons__GetWorkState_USCORECS(soap, data) ( soap_begin_recv(soap) || !soap_get_mons__GetWorkState_USCORECS(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct mons__GetWorkState_USCORECS * SOAP_FMAC4 soap_get_mons__GetWorkState_USCORECS(struct soap*, struct mons__GetWorkState_USCORECS *, const char*, const char*);

#define soap_new_mons__GetWorkState_USCORECS(soap, n) ::soap_instantiate_mons__GetWorkState_USCORECS(soap, n, NULL, NULL, NULL)


#define soap_delete_mons__GetWorkState_USCORECS(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct mons__GetWorkState_USCORECS * SOAP_FMAC2 soap_instantiate_mons__GetWorkState_USCORECS(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_mons__GetWorkState_USCORECS(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_mons__WorkStateRes
#define SOAP_TYPE_mons__WorkStateRes (40)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_mons__WorkStateRes(struct soap*, struct mons__WorkStateRes *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_mons__WorkStateRes(struct soap*, const struct mons__WorkStateRes *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_mons__WorkStateRes(struct soap*, const char*, int, const struct mons__WorkStateRes *, const char*);
SOAP_FMAC3 struct mons__WorkStateRes * SOAP_FMAC4 soap_in_mons__WorkStateRes(struct soap*, const char*, struct mons__WorkStateRes *, const char*);

#define soap_write_mons__WorkStateRes(soap, data) ( soap_begin_send(soap) || (soap_serialize_mons__WorkStateRes(soap, data), 0) || soap_put_mons__WorkStateRes(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_mons__WorkStateRes(struct soap*, const struct mons__WorkStateRes *, const char*, const char*);

#define soap_read_mons__WorkStateRes(soap, data) ( soap_begin_recv(soap) || !soap_get_mons__WorkStateRes(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct mons__WorkStateRes * SOAP_FMAC4 soap_get_mons__WorkStateRes(struct soap*, struct mons__WorkStateRes *, const char*, const char*);

#define soap_new_mons__WorkStateRes(soap, n) ::soap_instantiate_mons__WorkStateRes(soap, n, NULL, NULL, NULL)


#define soap_delete_mons__WorkStateRes(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct mons__WorkStateRes * SOAP_FMAC2 soap_instantiate_mons__WorkStateRes(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_mons__WorkStateRes(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_mons__GetIngestSpeedLimit
#define SOAP_TYPE_mons__GetIngestSpeedLimit (39)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_mons__GetIngestSpeedLimit(struct soap*, struct mons__GetIngestSpeedLimit *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_mons__GetIngestSpeedLimit(struct soap*, const struct mons__GetIngestSpeedLimit *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_mons__GetIngestSpeedLimit(struct soap*, const char*, int, const struct mons__GetIngestSpeedLimit *, const char*);
SOAP_FMAC3 struct mons__GetIngestSpeedLimit * SOAP_FMAC4 soap_in_mons__GetIngestSpeedLimit(struct soap*, const char*, struct mons__GetIngestSpeedLimit *, const char*);

#define soap_write_mons__GetIngestSpeedLimit(soap, data) ( soap_begin_send(soap) || (soap_serialize_mons__GetIngestSpeedLimit(soap, data), 0) || soap_put_mons__GetIngestSpeedLimit(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_mons__GetIngestSpeedLimit(struct soap*, const struct mons__GetIngestSpeedLimit *, const char*, const char*);

#define soap_read_mons__GetIngestSpeedLimit(soap, data) ( soap_begin_recv(soap) || !soap_get_mons__GetIngestSpeedLimit(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct mons__GetIngestSpeedLimit * SOAP_FMAC4 soap_get_mons__GetIngestSpeedLimit(struct soap*, struct mons__GetIngestSpeedLimit *, const char*, const char*);

#define soap_new_mons__GetIngestSpeedLimit(soap, n) ::soap_instantiate_mons__GetIngestSpeedLimit(soap, n, NULL, NULL, NULL)


#define soap_delete_mons__GetIngestSpeedLimit(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct mons__GetIngestSpeedLimit * SOAP_FMAC2 soap_instantiate_mons__GetIngestSpeedLimit(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_mons__GetIngestSpeedLimit(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_mons__IngestSpeedLimitRes
#define SOAP_TYPE_mons__IngestSpeedLimitRes (36)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_mons__IngestSpeedLimitRes(struct soap*, struct mons__IngestSpeedLimitRes *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_mons__IngestSpeedLimitRes(struct soap*, const struct mons__IngestSpeedLimitRes *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_mons__IngestSpeedLimitRes(struct soap*, const char*, int, const struct mons__IngestSpeedLimitRes *, const char*);
SOAP_FMAC3 struct mons__IngestSpeedLimitRes * SOAP_FMAC4 soap_in_mons__IngestSpeedLimitRes(struct soap*, const char*, struct mons__IngestSpeedLimitRes *, const char*);

#define soap_write_mons__IngestSpeedLimitRes(soap, data) ( soap_begin_send(soap) || (soap_serialize_mons__IngestSpeedLimitRes(soap, data), 0) || soap_put_mons__IngestSpeedLimitRes(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_mons__IngestSpeedLimitRes(struct soap*, const struct mons__IngestSpeedLimitRes *, const char*, const char*);

#define soap_read_mons__IngestSpeedLimitRes(soap, data) ( soap_begin_recv(soap) || !soap_get_mons__IngestSpeedLimitRes(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct mons__IngestSpeedLimitRes * SOAP_FMAC4 soap_get_mons__IngestSpeedLimitRes(struct soap*, struct mons__IngestSpeedLimitRes *, const char*, const char*);

#define soap_new_mons__IngestSpeedLimitRes(soap, n) ::soap_instantiate_mons__IngestSpeedLimitRes(soap, n, NULL, NULL, NULL)


#define soap_delete_mons__IngestSpeedLimitRes(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct mons__IngestSpeedLimitRes * SOAP_FMAC2 soap_instantiate_mons__IngestSpeedLimitRes(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_mons__IngestSpeedLimitRes(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_mons__GetSwitchState
#define SOAP_TYPE_mons__GetSwitchState (35)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_mons__GetSwitchState(struct soap*, struct mons__GetSwitchState *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_mons__GetSwitchState(struct soap*, const struct mons__GetSwitchState *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_mons__GetSwitchState(struct soap*, const char*, int, const struct mons__GetSwitchState *, const char*);
SOAP_FMAC3 struct mons__GetSwitchState * SOAP_FMAC4 soap_in_mons__GetSwitchState(struct soap*, const char*, struct mons__GetSwitchState *, const char*);

#define soap_write_mons__GetSwitchState(soap, data) ( soap_begin_send(soap) || (soap_serialize_mons__GetSwitchState(soap, data), 0) || soap_put_mons__GetSwitchState(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_mons__GetSwitchState(struct soap*, const struct mons__GetSwitchState *, const char*, const char*);

#define soap_read_mons__GetSwitchState(soap, data) ( soap_begin_recv(soap) || !soap_get_mons__GetSwitchState(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct mons__GetSwitchState * SOAP_FMAC4 soap_get_mons__GetSwitchState(struct soap*, struct mons__GetSwitchState *, const char*, const char*);

#define soap_new_mons__GetSwitchState(soap, n) ::soap_instantiate_mons__GetSwitchState(soap, n, NULL, NULL, NULL)


#define soap_delete_mons__GetSwitchState(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct mons__GetSwitchState * SOAP_FMAC2 soap_instantiate_mons__GetSwitchState(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_mons__GetSwitchState(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_mons__SwitchStateRes
#define SOAP_TYPE_mons__SwitchStateRes (32)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_mons__SwitchStateRes(struct soap*, struct mons__SwitchStateRes *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_mons__SwitchStateRes(struct soap*, const struct mons__SwitchStateRes *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_mons__SwitchStateRes(struct soap*, const char*, int, const struct mons__SwitchStateRes *, const char*);
SOAP_FMAC3 struct mons__SwitchStateRes * SOAP_FMAC4 soap_in_mons__SwitchStateRes(struct soap*, const char*, struct mons__SwitchStateRes *, const char*);

#define soap_write_mons__SwitchStateRes(soap, data) ( soap_begin_send(soap) || (soap_serialize_mons__SwitchStateRes(soap, data), 0) || soap_put_mons__SwitchStateRes(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_mons__SwitchStateRes(struct soap*, const struct mons__SwitchStateRes *, const char*, const char*);

#define soap_read_mons__SwitchStateRes(soap, data) ( soap_begin_recv(soap) || !soap_get_mons__SwitchStateRes(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct mons__SwitchStateRes * SOAP_FMAC4 soap_get_mons__SwitchStateRes(struct soap*, struct mons__SwitchStateRes *, const char*, const char*);

#define soap_new_mons__SwitchStateRes(soap, n) ::soap_instantiate_mons__SwitchStateRes(soap, n, NULL, NULL, NULL)


#define soap_delete_mons__SwitchStateRes(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct mons__SwitchStateRes * SOAP_FMAC2 soap_instantiate_mons__SwitchStateRes(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_mons__SwitchStateRes(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_mons__GetEthState
#define SOAP_TYPE_mons__GetEthState (31)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_mons__GetEthState(struct soap*, struct mons__GetEthState *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_mons__GetEthState(struct soap*, const struct mons__GetEthState *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_mons__GetEthState(struct soap*, const char*, int, const struct mons__GetEthState *, const char*);
SOAP_FMAC3 struct mons__GetEthState * SOAP_FMAC4 soap_in_mons__GetEthState(struct soap*, const char*, struct mons__GetEthState *, const char*);

#define soap_write_mons__GetEthState(soap, data) ( soap_begin_send(soap) || (soap_serialize_mons__GetEthState(soap, data), 0) || soap_put_mons__GetEthState(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_mons__GetEthState(struct soap*, const struct mons__GetEthState *, const char*, const char*);

#define soap_read_mons__GetEthState(soap, data) ( soap_begin_recv(soap) || !soap_get_mons__GetEthState(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct mons__GetEthState * SOAP_FMAC4 soap_get_mons__GetEthState(struct soap*, struct mons__GetEthState *, const char*, const char*);

#define soap_new_mons__GetEthState(soap, n) ::soap_instantiate_mons__GetEthState(soap, n, NULL, NULL, NULL)


#define soap_delete_mons__GetEthState(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct mons__GetEthState * SOAP_FMAC2 soap_instantiate_mons__GetEthState(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_mons__GetEthState(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_mons__GetEthStateResponse
#define SOAP_TYPE_mons__GetEthStateResponse (30)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_mons__GetEthStateResponse(struct soap*, struct mons__GetEthStateResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_mons__GetEthStateResponse(struct soap*, const struct mons__GetEthStateResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_mons__GetEthStateResponse(struct soap*, const char*, int, const struct mons__GetEthStateResponse *, const char*);
SOAP_FMAC3 struct mons__GetEthStateResponse * SOAP_FMAC4 soap_in_mons__GetEthStateResponse(struct soap*, const char*, struct mons__GetEthStateResponse *, const char*);

#define soap_write_mons__GetEthStateResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_mons__GetEthStateResponse(soap, data), 0) || soap_put_mons__GetEthStateResponse(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_mons__GetEthStateResponse(struct soap*, const struct mons__GetEthStateResponse *, const char*, const char*);

#define soap_read_mons__GetEthStateResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_mons__GetEthStateResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct mons__GetEthStateResponse * SOAP_FMAC4 soap_get_mons__GetEthStateResponse(struct soap*, struct mons__GetEthStateResponse *, const char*, const char*);

#define soap_new_mons__GetEthStateResponse(soap, n) ::soap_instantiate_mons__GetEthStateResponse(soap, n, NULL, NULL, NULL)


#define soap_delete_mons__GetEthStateResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct mons__GetEthStateResponse * SOAP_FMAC2 soap_instantiate_mons__GetEthStateResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_mons__GetEthStateResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_mons__ethstate
#define SOAP_TYPE_mons__ethstate (26)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_mons__ethstate(struct soap*, struct mons__ethstate *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_mons__ethstate(struct soap*, const struct mons__ethstate *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_mons__ethstate(struct soap*, const char*, int, const struct mons__ethstate *, const char*);
SOAP_FMAC3 struct mons__ethstate * SOAP_FMAC4 soap_in_mons__ethstate(struct soap*, const char*, struct mons__ethstate *, const char*);

#define soap_write_mons__ethstate(soap, data) ( soap_begin_send(soap) || (soap_serialize_mons__ethstate(soap, data), 0) || soap_put_mons__ethstate(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_mons__ethstate(struct soap*, const struct mons__ethstate *, const char*, const char*);

#define soap_read_mons__ethstate(soap, data) ( soap_begin_recv(soap) || !soap_get_mons__ethstate(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct mons__ethstate * SOAP_FMAC4 soap_get_mons__ethstate(struct soap*, struct mons__ethstate *, const char*, const char*);

#define soap_new_mons__ethstate(soap, n) ::soap_instantiate_mons__ethstate(soap, n, NULL, NULL, NULL)


#define soap_delete_mons__ethstate(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct mons__ethstate * SOAP_FMAC2 soap_instantiate_mons__ethstate(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_mons__ethstate(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_mons__GetRaidtate
#define SOAP_TYPE_mons__GetRaidtate (25)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_mons__GetRaidtate(struct soap*, struct mons__GetRaidtate *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_mons__GetRaidtate(struct soap*, const struct mons__GetRaidtate *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_mons__GetRaidtate(struct soap*, const char*, int, const struct mons__GetRaidtate *, const char*);
SOAP_FMAC3 struct mons__GetRaidtate * SOAP_FMAC4 soap_in_mons__GetRaidtate(struct soap*, const char*, struct mons__GetRaidtate *, const char*);

#define soap_write_mons__GetRaidtate(soap, data) ( soap_begin_send(soap) || (soap_serialize_mons__GetRaidtate(soap, data), 0) || soap_put_mons__GetRaidtate(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_mons__GetRaidtate(struct soap*, const struct mons__GetRaidtate *, const char*, const char*);

#define soap_read_mons__GetRaidtate(soap, data) ( soap_begin_recv(soap) || !soap_get_mons__GetRaidtate(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct mons__GetRaidtate * SOAP_FMAC4 soap_get_mons__GetRaidtate(struct soap*, struct mons__GetRaidtate *, const char*, const char*);

#define soap_new_mons__GetRaidtate(soap, n) ::soap_instantiate_mons__GetRaidtate(soap, n, NULL, NULL, NULL)


#define soap_delete_mons__GetRaidtate(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct mons__GetRaidtate * SOAP_FMAC2 soap_instantiate_mons__GetRaidtate(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_mons__GetRaidtate(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_mons__RaidStateRes
#define SOAP_TYPE_mons__RaidStateRes (21)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_mons__RaidStateRes(struct soap*, struct mons__RaidStateRes *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_mons__RaidStateRes(struct soap*, const struct mons__RaidStateRes *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_mons__RaidStateRes(struct soap*, const char*, int, const struct mons__RaidStateRes *, const char*);
SOAP_FMAC3 struct mons__RaidStateRes * SOAP_FMAC4 soap_in_mons__RaidStateRes(struct soap*, const char*, struct mons__RaidStateRes *, const char*);

#define soap_write_mons__RaidStateRes(soap, data) ( soap_begin_send(soap) || (soap_serialize_mons__RaidStateRes(soap, data), 0) || soap_put_mons__RaidStateRes(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_mons__RaidStateRes(struct soap*, const struct mons__RaidStateRes *, const char*, const char*);

#define soap_read_mons__RaidStateRes(soap, data) ( soap_begin_recv(soap) || !soap_get_mons__RaidStateRes(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct mons__RaidStateRes * SOAP_FMAC4 soap_get_mons__RaidStateRes(struct soap*, struct mons__RaidStateRes *, const char*, const char*);

#define soap_new_mons__RaidStateRes(soap, n) ::soap_instantiate_mons__RaidStateRes(soap, n, NULL, NULL, NULL)


#define soap_delete_mons__RaidStateRes(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct mons__RaidStateRes * SOAP_FMAC2 soap_instantiate_mons__RaidStateRes(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_mons__RaidStateRes(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_mons__GetSMSState
#define SOAP_TYPE_mons__GetSMSState (20)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_mons__GetSMSState(struct soap*, struct mons__GetSMSState *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_mons__GetSMSState(struct soap*, const struct mons__GetSMSState *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_mons__GetSMSState(struct soap*, const char*, int, const struct mons__GetSMSState *, const char*);
SOAP_FMAC3 struct mons__GetSMSState * SOAP_FMAC4 soap_in_mons__GetSMSState(struct soap*, const char*, struct mons__GetSMSState *, const char*);

#define soap_write_mons__GetSMSState(soap, data) ( soap_begin_send(soap) || (soap_serialize_mons__GetSMSState(soap, data), 0) || soap_put_mons__GetSMSState(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_mons__GetSMSState(struct soap*, const struct mons__GetSMSState *, const char*, const char*);

#define soap_read_mons__GetSMSState(soap, data) ( soap_begin_recv(soap) || !soap_get_mons__GetSMSState(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct mons__GetSMSState * SOAP_FMAC4 soap_get_mons__GetSMSState(struct soap*, struct mons__GetSMSState *, const char*, const char*);

#define soap_new_mons__GetSMSState(soap, n) ::soap_instantiate_mons__GetSMSState(soap, n, NULL, NULL, NULL)


#define soap_delete_mons__GetSMSState(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct mons__GetSMSState * SOAP_FMAC2 soap_instantiate_mons__GetSMSState(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_mons__GetSMSState(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_mons__SMSState
#define SOAP_TYPE_mons__SMSState (16)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_mons__SMSState(struct soap*, struct mons__SMSState *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_mons__SMSState(struct soap*, const struct mons__SMSState *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_mons__SMSState(struct soap*, const char*, int, const struct mons__SMSState *, const char*);
SOAP_FMAC3 struct mons__SMSState * SOAP_FMAC4 soap_in_mons__SMSState(struct soap*, const char*, struct mons__SMSState *, const char*);

#define soap_write_mons__SMSState(soap, data) ( soap_begin_send(soap) || (soap_serialize_mons__SMSState(soap, data), 0) || soap_put_mons__SMSState(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_mons__SMSState(struct soap*, const struct mons__SMSState *, const char*, const char*);

#define soap_read_mons__SMSState(soap, data) ( soap_begin_recv(soap) || !soap_get_mons__SMSState(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct mons__SMSState * SOAP_FMAC4 soap_get_mons__SMSState(struct soap*, struct mons__SMSState *, const char*, const char*);

#define soap_new_mons__SMSState(soap, n) ::soap_instantiate_mons__SMSState(soap, n, NULL, NULL, NULL)


#define soap_delete_mons__SMSState(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct mons__SMSState * SOAP_FMAC2 soap_instantiate_mons__SMSState(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_mons__SMSState(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_mons__GetTMSState
#define SOAP_TYPE_mons__GetTMSState (15)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_mons__GetTMSState(struct soap*, struct mons__GetTMSState *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_mons__GetTMSState(struct soap*, const struct mons__GetTMSState *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_mons__GetTMSState(struct soap*, const char*, int, const struct mons__GetTMSState *, const char*);
SOAP_FMAC3 struct mons__GetTMSState * SOAP_FMAC4 soap_in_mons__GetTMSState(struct soap*, const char*, struct mons__GetTMSState *, const char*);

#define soap_write_mons__GetTMSState(soap, data) ( soap_begin_send(soap) || (soap_serialize_mons__GetTMSState(soap, data), 0) || soap_put_mons__GetTMSState(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_mons__GetTMSState(struct soap*, const struct mons__GetTMSState *, const char*, const char*);

#define soap_read_mons__GetTMSState(soap, data) ( soap_begin_recv(soap) || !soap_get_mons__GetTMSState(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct mons__GetTMSState * SOAP_FMAC4 soap_get_mons__GetTMSState(struct soap*, struct mons__GetTMSState *, const char*, const char*);

#define soap_new_mons__GetTMSState(soap, n) ::soap_instantiate_mons__GetTMSState(soap, n, NULL, NULL, NULL)


#define soap_delete_mons__GetTMSState(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct mons__GetTMSState * SOAP_FMAC2 soap_instantiate_mons__GetTMSState(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_mons__GetTMSState(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_mons__TmsStateRes
#define SOAP_TYPE_mons__TmsStateRes (12)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_mons__TmsStateRes(struct soap*, struct mons__TmsStateRes *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_mons__TmsStateRes(struct soap*, const struct mons__TmsStateRes *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_mons__TmsStateRes(struct soap*, const char*, int, const struct mons__TmsStateRes *, const char*);
SOAP_FMAC3 struct mons__TmsStateRes * SOAP_FMAC4 soap_in_mons__TmsStateRes(struct soap*, const char*, struct mons__TmsStateRes *, const char*);

#define soap_write_mons__TmsStateRes(soap, data) ( soap_begin_send(soap) || (soap_serialize_mons__TmsStateRes(soap, data), 0) || soap_put_mons__TmsStateRes(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_mons__TmsStateRes(struct soap*, const struct mons__TmsStateRes *, const char*, const char*);

#define soap_read_mons__TmsStateRes(soap, data) ( soap_begin_recv(soap) || !soap_get_mons__TmsStateRes(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct mons__TmsStateRes * SOAP_FMAC4 soap_get_mons__TmsStateRes(struct soap*, struct mons__TmsStateRes *, const char*, const char*);

#define soap_new_mons__TmsStateRes(soap, n) ::soap_instantiate_mons__TmsStateRes(soap, n, NULL, NULL, NULL)


#define soap_delete_mons__TmsStateRes(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct mons__TmsStateRes * SOAP_FMAC2 soap_instantiate_mons__TmsStateRes(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_mons__TmsStateRes(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_mons__GetMontorState
#define SOAP_TYPE_mons__GetMontorState (11)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_mons__GetMontorState(struct soap*, struct mons__GetMontorState *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_mons__GetMontorState(struct soap*, const struct mons__GetMontorState *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_mons__GetMontorState(struct soap*, const char*, int, const struct mons__GetMontorState *, const char*);
SOAP_FMAC3 struct mons__GetMontorState * SOAP_FMAC4 soap_in_mons__GetMontorState(struct soap*, const char*, struct mons__GetMontorState *, const char*);

#define soap_write_mons__GetMontorState(soap, data) ( soap_begin_send(soap) || (soap_serialize_mons__GetMontorState(soap, data), 0) || soap_put_mons__GetMontorState(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_mons__GetMontorState(struct soap*, const struct mons__GetMontorState *, const char*, const char*);

#define soap_read_mons__GetMontorState(soap, data) ( soap_begin_recv(soap) || !soap_get_mons__GetMontorState(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct mons__GetMontorState * SOAP_FMAC4 soap_get_mons__GetMontorState(struct soap*, struct mons__GetMontorState *, const char*, const char*);

#define soap_new_mons__GetMontorState(soap, n) ::soap_instantiate_mons__GetMontorState(soap, n, NULL, NULL, NULL)


#define soap_delete_mons__GetMontorState(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct mons__GetMontorState * SOAP_FMAC2 soap_instantiate_mons__GetMontorState(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_mons__GetMontorState(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_mons__MontorStateRes
#define SOAP_TYPE_mons__MontorStateRes (8)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_mons__MontorStateRes(struct soap*, struct mons__MontorStateRes *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_mons__MontorStateRes(struct soap*, const struct mons__MontorStateRes *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_mons__MontorStateRes(struct soap*, const char*, int, const struct mons__MontorStateRes *, const char*);
SOAP_FMAC3 struct mons__MontorStateRes * SOAP_FMAC4 soap_in_mons__MontorStateRes(struct soap*, const char*, struct mons__MontorStateRes *, const char*);

#define soap_write_mons__MontorStateRes(soap, data) ( soap_begin_send(soap) || (soap_serialize_mons__MontorStateRes(soap, data), 0) || soap_put_mons__MontorStateRes(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_mons__MontorStateRes(struct soap*, const struct mons__MontorStateRes *, const char*, const char*);

#define soap_read_mons__MontorStateRes(soap, data) ( soap_begin_recv(soap) || !soap_get_mons__MontorStateRes(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct mons__MontorStateRes * SOAP_FMAC4 soap_get_mons__MontorStateRes(struct soap*, struct mons__MontorStateRes *, const char*, const char*);

#define soap_new_mons__MontorStateRes(soap, n) ::soap_instantiate_mons__MontorStateRes(soap, n, NULL, NULL, NULL)


#define soap_delete_mons__MontorStateRes(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct mons__MontorStateRes * SOAP_FMAC2 soap_instantiate_mons__MontorStateRes(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_mons__MontorStateRes(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Reason
#define SOAP_TYPE_PointerToSOAP_ENV__Reason (53)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Reason(struct soap*, const char *, int, struct SOAP_ENV__Reason *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason **, const char*);

#define soap_write_PointerToSOAP_ENV__Reason(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerToSOAP_ENV__Reason(soap, data), 0) || soap_put_PointerToSOAP_ENV__Reason(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*, const char*, const char*);

#define soap_read_PointerToSOAP_ENV__Reason(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Reason(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason **, const char*, const char*);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Detail
#define SOAP_TYPE_PointerToSOAP_ENV__Detail (52)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Detail(struct soap*, const char *, int, struct SOAP_ENV__Detail *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail **, const char*);

#define soap_write_PointerToSOAP_ENV__Detail(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerToSOAP_ENV__Detail(soap, data), 0) || soap_put_PointerToSOAP_ENV__Detail(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*, const char*, const char*);

#define soap_read_PointerToSOAP_ENV__Detail(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Detail(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail **, const char*, const char*);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Code
#define SOAP_TYPE_PointerToSOAP_ENV__Code (46)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Code(struct soap*, const char *, int, struct SOAP_ENV__Code *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code **, const char*);

#define soap_write_PointerToSOAP_ENV__Code(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerToSOAP_ENV__Code(soap, data), 0) || soap_put_PointerToSOAP_ENV__Code(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*, const char*, const char*);

#define soap_read_PointerToSOAP_ENV__Code(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Code(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code **, const char*, const char*);

#endif

#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (5)
#endif

#define soap_default__QName(soap, a) soap_default_string(soap, a)


#define soap_serialize__QName(soap, a) soap_serialize_string(soap, a)

SOAP_FMAC3 int SOAP_FMAC4 soap_out__QName(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in__QName(struct soap*, const char*, char **, const char*);

#define soap_write__QName(soap, data) ( soap_begin_send(soap) || (soap_serialize__QName(soap, data), 0) || soap_put__QName(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put__QName(struct soap*, char *const*, const char*, const char*);

#define soap_read__QName(soap, data) ( soap_begin_recv(soap) || !soap_get__QName(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get__QName(struct soap*, char **, const char*, const char*);

#ifndef SOAP_TYPE_string
#define SOAP_TYPE_string (4)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_string(struct soap*, char **);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_string(struct soap*, char *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_string(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_string(struct soap*, const char*, char **, const char*);

#define soap_write_string(soap, data) ( soap_begin_send(soap) || (soap_serialize_string(soap, data), 0) || soap_put_string(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put_string(struct soap*, char *const*, const char*, const char*);

#define soap_read_string(soap, data) ( soap_begin_recv(soap) || !soap_get_string(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_string(struct soap*, char **, const char*, const char*);

#ifndef SOAP_TYPE_std__vectorTemplateOfmons__ethstate
#define SOAP_TYPE_std__vectorTemplateOfmons__ethstate (27)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfmons__ethstate(struct soap*, std::vector<struct mons__ethstate >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfmons__ethstate(struct soap*, const std::vector<struct mons__ethstate >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfmons__ethstate(struct soap*, const char*, int, const std::vector<struct mons__ethstate >*, const char*);
SOAP_FMAC3 std::vector<struct mons__ethstate >* SOAP_FMAC4 soap_in_std__vectorTemplateOfmons__ethstate(struct soap*, const char*, std::vector<struct mons__ethstate >*, const char*);

#define soap_new_std__vectorTemplateOfmons__ethstate(soap, n) ::soap_instantiate_std__vectorTemplateOfmons__ethstate(soap, n, NULL, NULL, NULL)


#define soap_delete_std__vectorTemplateOfmons__ethstate(soap, p) soap_delete(soap, p)

SOAP_FMAC1 std::vector<struct mons__ethstate > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfmons__ethstate(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfmons__ethstate(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOfint
#define SOAP_TYPE_std__vectorTemplateOfint (22)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfint(struct soap*, std::vector<int >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfint(struct soap*, const std::vector<int >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfint(struct soap*, const char*, int, const std::vector<int >*, const char*);
SOAP_FMAC3 std::vector<int >* SOAP_FMAC4 soap_in_std__vectorTemplateOfint(struct soap*, const char*, std::vector<int >*, const char*);

#define soap_new_std__vectorTemplateOfint(soap, n) ::soap_instantiate_std__vectorTemplateOfint(soap, n, NULL, NULL, NULL)


#define soap_delete_std__vectorTemplateOfint(soap, p) soap_delete(soap, p)

SOAP_FMAC1 std::vector<int > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfint(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfint(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

/* End of soapH.h */
