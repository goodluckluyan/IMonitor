<?xml version="1.0" encoding="UTF-8"?>
<definitions name="Service"
 targetNamespace="http://tempuri.org/mons.xsd/Service.wsdl"
 xmlns:tns="http://tempuri.org/mons.xsd/Service.wsdl"
 xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/"
 xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/"
 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
 xmlns:xsd="http://www.w3.org/2001/XMLSchema"
 xmlns:mons="http://tempuri.org/mons.xsd"
 xmlns:SOAP="http://schemas.xmlsoap.org/wsdl/soap/"
 xmlns:MIME="http://schemas.xmlsoap.org/wsdl/mime/"
 xmlns:DIME="http://schemas.xmlsoap.org/ws/2002/04/dime/wsdl/"
 xmlns:WSDL="http://schemas.xmlsoap.org/wsdl/"
 xmlns="http://schemas.xmlsoap.org/wsdl/">

<types>

 <schema targetNamespace="http://tempuri.org/mons.xsd"
  xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/"
  xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:xsd="http://www.w3.org/2001/XMLSchema"
  xmlns:mons="http://tempuri.org/mons.xsd"
  xmlns="http://www.w3.org/2001/XMLSchema"
  elementFormDefault="unqualified"
  attributeFormDefault="unqualified">
  <import namespace="http://schemas.xmlsoap.org/soap/encoding/" schemaLocation="http://schemas.xmlsoap.org/soap/encoding/"/>
  <complexType name="ethstate">
   <sequence>
     <element name="eth" type="xsd:int" minOccurs="1" maxOccurs="1"/>
     <element name="type" type="xsd:int" minOccurs="1" maxOccurs="1"/>
     <element name="ConnectState" type="xsd:int" minOccurs="1" maxOccurs="1"/>
     <element name="speed" type="xsd:int" minOccurs="1" maxOccurs="1"/>
   </sequence>
  </complexType>
  <!-- operation request element -->
  <element name="GetMontorState">
   <complexType>
    <sequence>
    </sequence>
   </complexType>
  </element>
  <!-- operation response element -->
  <element name="MontorStateRes">
   <complexType>
    <sequence>
     <element name="bMain" type="xsd:int" minOccurs="1" maxOccurs="1"/>
     <element name="iState" type="xsd:int" minOccurs="1" maxOccurs="1"/>
    </sequence>
   </complexType>
  </element>
  <!-- operation request element -->
  <element name="GetTMSState">
   <complexType>
    <sequence>
    </sequence>
   </complexType>
  </element>
  <!-- operation response element -->
  <element name="TmsStateRes">
   <complexType>
    <sequence>
     <element name="bRun" type="xsd:int" minOccurs="1" maxOccurs="1"/>
     <element name="iWorkState" type="xsd:int" minOccurs="1" maxOccurs="1"/>
     <element name="iState" type="xsd:int" minOccurs="1" maxOccurs="1"/>
    </sequence>
   </complexType>
  </element>
  <!-- operation request element -->
  <element name="GetSMSState">
   <complexType>
    <sequence>
    </sequence>
   </complexType>
  </element>
  <!-- operation response element -->
  <element name="SMSState">
   <complexType>
    <sequence>
     <element name="HallId" type="xsd:string" minOccurs="1" maxOccurs="1"/>
     <element name="bRun" type="xsd:int" minOccurs="1" maxOccurs="1"/>
     <element name="state" type="xsd:int" minOccurs="1" maxOccurs="1"/>
     <element name="position" type="xsd:int" minOccurs="1" maxOccurs="1"/>
     <element name="strSplUuid" type="xsd:string" minOccurs="1" maxOccurs="1"/>
    </sequence>
   </complexType>
  </element>
  <!-- operation request element -->
  <element name="GetRaidtate">
   <complexType>
    <sequence>
    </sequence>
   </complexType>
  </element>
  <!-- operation response element -->
  <element name="RaidStateRes">
   <complexType>
    <sequence>
     <element name="state" type="xsd:int" minOccurs="1" maxOccurs="1"/>
     <element name="ReadSpeed" type="xsd:int" minOccurs="1" maxOccurs="1"/>
     <element name="WriteSpeed" type="xsd:int" minOccurs="1" maxOccurs="1"/>
     <element name="diskState" type="xsd:int" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
   </complexType>
  </element>
  <!-- operation request element -->
  <element name="GetEthState">
   <complexType>
    <sequence>
    </sequence>
   </complexType>
  </element>
  <!-- operation response element -->
  <element name="GetEthStateResponse">
   <complexType>
    <sequence>
     <element name="vecret" type="mons:ethstate" minOccurs="1" maxOccurs="unbounded"/>
    </sequence>
   </complexType>
  </element>
  <!-- operation request element -->
  <element name="GetSwitchState">
   <complexType>
    <sequence>
    </sequence>
   </complexType>
  </element>
  <!-- operation response element -->
  <element name="SwitchStateRes">
   <complexType>
    <sequence>
     <element name="Switch1State" type="xsd:int" minOccurs="1" maxOccurs="1"/>
     <element name="Switch2State" type="xsd:int" minOccurs="1" maxOccurs="1"/>
    </sequence>
   </complexType>
  </element>
  <!-- operation request element -->
  <element name="GetIngestSpeedLimit">
   <complexType>
    <sequence>
    </sequence>
   </complexType>
  </element>
  <!-- operation response element -->
  <element name="IngestSpeedLimitRes">
   <complexType>
    <sequence>
     <element name="bEnableIngest" type="xsd:int" minOccurs="1" maxOccurs="1"/>
     <element name="speedLimit" type="xsd:int" minOccurs="1" maxOccurs="1"/>
    </sequence>
   </complexType>
  </element>
  <!-- operation request element -->
  <element name="GetWorkState_CS">
   <complexType>
    <sequence>
    </sequence>
   </complexType>
  </element>
  <!-- operation response element -->
  <element name="WorkStateRes">
   <complexType>
    <sequence>
     <element name="state" type="xsd:int" minOccurs="1" maxOccurs="1"/>
     <element name="info" type="xsd:string" minOccurs="1" maxOccurs="1"/>
     <element name="hall" type="xsd:string" minOccurs="1" maxOccurs="1"/>
    </sequence>
   </complexType>
  </element>
 </schema>

</types>

<message name="GetMontorState">
 <part name="parameters" element="mons:GetMontorState"/>
</message>

<message name="MontorStateRes">
 <part name="parameters" element="mons:MontorStateRes"/>
</message>

<message name="GetTMSState">
 <part name="parameters" element="mons:GetTMSState"/>
</message>

<message name="TmsStateRes">
 <part name="parameters" element="mons:TmsStateRes"/>
</message>

<message name="GetSMSState">
 <part name="parameters" element="mons:GetSMSState"/>
</message>

<message name="SMSState">
 <part name="parameters" element="mons:SMSState"/>
</message>

<message name="GetRaidtate">
 <part name="parameters" element="mons:GetRaidtate"/>
</message>

<message name="RaidStateRes">
 <part name="parameters" element="mons:RaidStateRes"/>
</message>

<message name="GetEthStateRequest">
 <part name="parameters" element="mons:GetEthState"/>
</message>

<message name="GetEthStateResponse">
 <part name="parameters" element="mons:GetEthStateResponse"/>
</message>

<message name="GetSwitchState">
 <part name="parameters" element="mons:GetSwitchState"/>
</message>

<message name="SwitchStateRes">
 <part name="parameters" element="mons:SwitchStateRes"/>
</message>

<message name="GetIngestSpeedLimit">
 <part name="parameters" element="mons:GetIngestSpeedLimit"/>
</message>

<message name="IngestSpeedLimitRes">
 <part name="parameters" element="mons:IngestSpeedLimitRes"/>
</message>

<message name="GetWorkState_CS">
 <part name="parameters" element="mons:GetWorkState_CS"/>
</message>

<message name="WorkStateRes">
 <part name="parameters" element="mons:WorkStateRes"/>
</message>

<portType name="ServicePortType">
 <operation name="GetMontorState">
  <documentation>Service definition of function mons__GetMontorState</documentation>
  <input message="tns:GetMontorState"/>
  <output message="tns:MontorStateRes"/>
 </operation>
 <operation name="GetTMSState">
  <documentation>Service definition of function mons__GetTMSState</documentation>
  <input message="tns:GetTMSState"/>
  <output message="tns:TmsStateRes"/>
 </operation>
 <operation name="GetSMSState">
  <documentation>Service definition of function mons__GetSMSState</documentation>
  <input message="tns:GetSMSState"/>
  <output message="tns:SMSState"/>
 </operation>
 <operation name="GetRaidtate">
  <documentation>Service definition of function mons__GetRaidtate</documentation>
  <input message="tns:GetRaidtate"/>
  <output message="tns:RaidStateRes"/>
 </operation>
 <operation name="GetEthState">
  <documentation>Service definition of function mons__GetEthState</documentation>
  <input message="tns:GetEthStateRequest"/>
  <output message="tns:GetEthStateResponse"/>
 </operation>
 <operation name="GetSwitchState">
  <documentation>Service definition of function mons__GetSwitchState</documentation>
  <input message="tns:GetSwitchState"/>
  <output message="tns:SwitchStateRes"/>
 </operation>
 <operation name="GetIngestSpeedLimit">
  <documentation>Service definition of function mons__GetIngestSpeedLimit</documentation>
  <input message="tns:GetIngestSpeedLimit"/>
  <output message="tns:IngestSpeedLimitRes"/>
 </operation>
 <operation name="GetWorkState_CS">
  <documentation>Service definition of function mons__GetWorkState_USCORECS</documentation>
  <input message="tns:GetWorkState_CS"/>
  <output message="tns:WorkStateRes"/>
 </operation>
</portType>

<binding name="Service" type="tns:ServicePortType">
 <SOAP:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
 <operation name="GetMontorState">
  <SOAP:operation soapAction=""/>
  <input>
     <SOAP:body parts="parameters" use="literal"/>
  </input>
  <output>
     <SOAP:body parts="parameters" use="literal"/>
  </output>
 </operation>
 <operation name="GetTMSState">
  <SOAP:operation soapAction=""/>
  <input>
     <SOAP:body parts="parameters" use="literal"/>
  </input>
  <output>
     <SOAP:body parts="parameters" use="literal"/>
  </output>
 </operation>
 <operation name="GetSMSState">
  <SOAP:operation soapAction=""/>
  <input>
     <SOAP:body parts="parameters" use="literal"/>
  </input>
  <output>
     <SOAP:body parts="parameters" use="literal"/>
  </output>
 </operation>
 <operation name="GetRaidtate">
  <SOAP:operation soapAction=""/>
  <input>
     <SOAP:body parts="parameters" use="literal"/>
  </input>
  <output>
     <SOAP:body parts="parameters" use="literal"/>
  </output>
 </operation>
 <operation name="GetEthState">
  <SOAP:operation soapAction=""/>
  <input>
     <SOAP:body parts="parameters" use="literal"/>
  </input>
  <output>
     <SOAP:body parts="parameters" use="literal"/>
  </output>
 </operation>
 <operation name="GetSwitchState">
  <SOAP:operation soapAction=""/>
  <input>
     <SOAP:body parts="parameters" use="literal"/>
  </input>
  <output>
     <SOAP:body parts="parameters" use="literal"/>
  </output>
 </operation>
 <operation name="GetIngestSpeedLimit">
  <SOAP:operation soapAction=""/>
  <input>
     <SOAP:body parts="parameters" use="literal"/>
  </input>
  <output>
     <SOAP:body parts="parameters" use="literal"/>
  </output>
 </operation>
 <operation name="GetWorkState_CS">
  <SOAP:operation soapAction=""/>
  <input>
     <SOAP:body parts="parameters" use="literal"/>
  </input>
  <output>
     <SOAP:body parts="parameters" use="literal"/>
  </output>
 </operation>
</binding>

<service name="Service">
 <documentation>gSOAP 2.7.15 generated service definition</documentation>
 <port name="Service" binding="tns:Service">
  <SOAP:address location="http://localhost:80"/>
 </port>
</service>

</definitions>
